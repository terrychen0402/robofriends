{"version":3,"sources":["components/Card.js","components/CardList.js","components/Searchbox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","id","className","alt","src","CardList","robots","map","user","i","Searchbox","searchfield","SearchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAkBeA,EAhBF,SAACC,GAAW,IACjBC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,MAAOC,EAAMH,EAANG,GACpB,OACC,sBAAKC,UAAY,sDAAjB,UACA,qBAAKC,IAAM,SAASC,IAAG,+BAA4BH,EAA5B,cACvB,gCACC,6BAAKF,IACL,4BAAIC,WCaQK,EAnBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAClB,OACC,8BAEEA,EAAOC,KAAI,SAACC,EAAMC,GAClB,OACA,cAAE,EAAF,CAEAR,GAAMK,EAAOG,GAAGR,GAChBF,KAAQO,EAAOG,GAAGV,KAClBC,MAASM,EAAOG,GAAGT,OAHZS,SCEIC,EAVG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAChC,OACC,qBAAKV,UAAY,MAAjB,SACC,uBAAOA,UAAY,mCAAmCW,KAAO,SAASC,YAAc,gBAAgBC,SAAYH,OCMpGI,EATA,SAAClB,GACf,OACC,qBAAKmB,MAAS,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAxE,SACCtB,EAAMuB,YCkBMC,E,kDAnBd,WAAYxB,GAAO,IAAD,8BACjB,cAAMA,IACDyB,MAAQ,CACZC,UAAU,GAHM,E,qDAOlB,SAAkBC,EAAOC,GACxBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG1B,WACC,OAAGG,KAAKJ,MAAMC,SACN,4DAEDG,KAAK7B,MAAMuB,a,GAhBOQ,aC4CZC,G,wDAvCd,aAAe,IAAD,8BACb,gBAaDC,eAAiB,SAACC,GACjB,EAAKJ,SAAS,CAAEjB,YAAaqB,EAAMC,OAAOC,SAb1C,EAAKX,MAAQ,CACZjB,OAAQ,GACRK,YAAa,IAJD,E,qDAQd,WAAoB,IAAD,OAClBwB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAACtB,OAAOiC,S,oBAOtC,WAAU,IAAD,EACsBZ,KAAKJ,MAA5BjB,EADC,EACDA,OAAQK,EADP,EACOA,YACT6B,EAAiBlC,EAAOmC,QAAO,SAAAC,GACpC,OAAOA,EAAM3C,KAAK4C,cAAcC,SAASjC,EAAYgC,kBAEtD,OAAQrC,EAAOuC,OAGd,sBAAK3C,UAAY,KAAjB,UACC,oBAAIA,UAAY,KAAhB,yBACA,cAAC,EAAD,CAAWU,aAAgBe,KAAKI,iBAChC,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAUzB,OAAUkC,WAPvB,oBAAItC,UAAY,KAAhB,0B,GAzBe2B,cCKHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1d552e64.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = (props) => {\n\tconst {name, email, id} = props\n\treturn (\n\t\t<div className = 'tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'> \n\t\t<img alt = 'robots' src = {`https://robohash.org/${id}?200x200`}/>\n\t\t<div>\n\t\t\t<h2>{name}</h2>\n\t\t\t<p>{email}</p>\n\t\t</div>\n\t\t</div>\n\n\n\t);\n}\n\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({robots}) => {\n\treturn (\n\t\t<div> \n\t\t\t{\n\t\t\t\trobots.map((user, i) => {\n\t\t\t\treturn \t(\n\t\t\t\t< Card \n\t\t\t\tkey = {i}\n\t\t\t\tid = {robots[i].id} \n\t\t\t\tname = {robots[i].name} \n\t\t\t\temail = {robots[i].email}\n\t\t\t\t/>\n\t\t\t);\n\t\t\t})\n\t\t}\n\t\t</div>\n\t);\n}\n\nexport default CardList;","import React from 'react';\n\nconst Searchbox = ({searchfield, SearchChange}) => {\n\treturn (\n\t\t<div className = 'pa2'>\n\t\t\t<input className = 'pa3 ba b--green bg-lightest-blue' type = 'search' placeholder = 'search robots' onChange = {SearchChange} />\n\t\t</div>\n\t);\n}\n\n\n\nexport default Searchbox;","import React from 'react';\n\nconst Scroll = (props) => {\n\treturn (\n\t\t<div style = {{ overflowY: 'scroll', border: '1px solid black', height: '800px' }}>\n\t\t{props.children}\n\t\t</div>\n\t);\n}\n\n\nexport default Scroll;","import React, { Component } from 'react';\n\n\nclass ErrorBoundry extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thasError: false\n\t\t}\n\t}\n\n\tcomponentDidCatch(error, info){\n\t\tthis.setState({hasError: true})\n\t}\n\n\trender(){\n\t\tif(this.state.hasError){\n\t\t\treturn <h1>Ooooops! that is not good </h1>\n\t\t}\n\t\treturn this.props.children;\n\t}\n}\n\nexport default ErrorBoundry;\n","import React, { Component }from 'react';\nimport CardList from '../components/CardList';\nimport Searchbox from '../components/Searchbox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport './App.css';\n\nclass App extends Component{\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\trobots: [],\n\t\t\tsearchfield: ''\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t.then(response => response.json())\n\t\t.then(users => this.setState({robots:users}));\n\t}\n\n\tonSearchChange = (event) => {\n\t\tthis.setState({ searchfield: event.target.value })\n\t}\n\n\trender() {\n\t\tconst {robots, searchfield} = this.state;\n\t\tconst filteredRobots = robots.filter(robot =>{\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\n\t\t});\n\t\treturn !robots.length ?\n\t\t\t<h1 className = 'tc'>Loading </h1> :\n\t\t(\n\t\t\t<div className = 'tc'>\n\t\t\t\t<h1 className = 'f1'>Robofriends</h1>\n\t\t\t\t<Searchbox SearchChange = {this.onSearchChange}/>\n\t\t\t\t<Scroll>\n\t\t\t\t\t<ErrorBoundry>\n\t\t\t\t\t\t<CardList robots = {filteredRobots} />\n\t\t\t\t\t</ErrorBoundry>\n\t\t\t\t</Scroll>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n  \t<App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}